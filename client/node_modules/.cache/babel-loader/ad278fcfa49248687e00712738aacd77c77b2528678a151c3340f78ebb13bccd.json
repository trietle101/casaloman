{"ast":null,"code":"import * as yup from \"yup\";\nconst passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\n// min 5 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\n\nexport const UserSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  name: yup.string().required(\"This field is required\"),\n  password: yup.string().min(5).matches(passwordRegex, {\n    message: \"Please enter password with more than 5 characters, 1 upper case letter, 1 lower case letter and 1 numeric digit.\"\n  }).required(\"This field is required\")\n});\nexport const LoginSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"This field is required\"),\n  password: yup.string().min(5).matches(passwordRegex, {\n    message: \"Please enter password with more than 5 characters, 1 upper case letter, 1 lower case letter and 1 numeric digit.\"\n  }).required(\"This field is required\")\n});","map":{"version":3,"names":["yup","passwordRegex","UserSchema","object","shape","email","string","required","name","password","min","matches","message","LoginSchema"],"sources":["/Users/trietle/FPT Polytechnic/FALL 2023/framework2/casaloman/client/src/features/validations/UserSchema.js"],"sourcesContent":["import * as yup from \"yup\";\n\nconst passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\n// min 5 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\n\nexport const UserSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Please enter a valid email\")\n    .required(\"This field is required\"),\n  name: yup.string().required(\"This field is required\"),\n  password: yup\n    .string()\n    .min(5)\n    .matches(passwordRegex, {\n      message:\n        \"Please enter password with more than 5 characters, 1 upper case letter, 1 lower case letter and 1 numeric digit.\"\n    })\n    .required(\"This field is required\")\n});\nexport const LoginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Please enter a valid email\")\n    .required(\"This field is required\"),\n  password: yup\n    .string()\n    .min(5)\n    .matches(passwordRegex, {\n      message:\n        \"Please enter password with more than 5 characters, 1 upper case letter, 1 lower case letter and 1 numeric digit.\"\n    })\n    .required(\"This field is required\")\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,aAAa,GAAG,uCAAuC;AAC7D;;AAEA,OAAO,MAAMC,UAAU,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC3CC,KAAK,EAAEL,GAAG,CACPM,MAAM,CAAC,CAAC,CACRD,KAAK,CAAC,4BAA4B,CAAC,CACnCE,QAAQ,CAAC,wBAAwB,CAAC;EACrCC,IAAI,EAAER,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,wBAAwB,CAAC;EACrDE,QAAQ,EAAET,GAAG,CACVM,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,CAAC,CACNC,OAAO,CAACV,aAAa,EAAE;IACtBW,OAAO,EACL;EACJ,CAAC,CAAC,CACDL,QAAQ,CAAC,wBAAwB;AACtC,CAAC,CAAC;AACF,OAAO,MAAMM,WAAW,GAAGb,GAAG,CAACG,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC5CC,KAAK,EAAEL,GAAG,CACPM,MAAM,CAAC,CAAC,CACRD,KAAK,CAAC,4BAA4B,CAAC,CACnCE,QAAQ,CAAC,wBAAwB,CAAC;EACrCE,QAAQ,EAAET,GAAG,CACVM,MAAM,CAAC,CAAC,CACRI,GAAG,CAAC,CAAC,CAAC,CACNC,OAAO,CAACV,aAAa,EAAE;IACtBW,OAAO,EACL;EACJ,CAAC,CAAC,CACDL,QAAQ,CAAC,wBAAwB;AACtC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}